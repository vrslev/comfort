"""
This type stub file was generated by pyright.
"""

from typing import Callable, Union

def apply(): ...
def update(): ...
def respond(): ...

class RateLimiter:
    def __init__(self, limit, window) -> None: ...
    def apply(self): ...
    def reject(self): ...
    def update(self): ...
    def headers(self): ...
    def respond(self): ...

def rate_limit(
    key: str,
    limit: Union[int, Callable] = ...,
    seconds: int = ...,
    methods: Union[str, list] = ...,
):  # -> (fun: Unknown) -> (*args: Unknown, **kwargs: Unknown) -> Unknown:
    """Decorator to rate limit an endpoint.

    This will limit Number of requests per endpoint to `limit` within `seconds`.
    Uses redis cache to track request counts.

    :param key: Key is used to identify the requests uniqueness
    :param limit: Maximum number of requests to allow with in window time
    :type limit: Callable or Integer
    :param seconds: window time to allow requests
    :param methods: Limit the validation for these methods.
            `ALL` is a wildcard that applies rate limit on all methods.
    :type methods: string or list or tuple

    :returns: a decorator function that limit the number of requests per endpoint
    """
    ...
