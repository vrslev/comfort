"""
This type stub file was generated by pyright.
"""

doctypes_to_skip = ...

def delete_doc(
    doctype=...,
    name=...,
    force=...,
    ignore_doctypes=...,
    for_reload=...,
    ignore_permissions=...,
    flags=...,
    ignore_on_trash=...,
    ignore_missing=...,
    delete_permanently=...,
):  # -> Literal[False] | None:
    """
    Deletes a doc(dt, dn) and validates if it is not submitted and not linked in a live record
    """
    ...

def add_to_deleted_document(doc):  # -> None:
    """Add this document to Deleted Document table. Called after delete"""
    ...

def update_naming_series(doc): ...
def delete_from_table(doctype, name, ignore_doctypes, doc): ...
def update_flags(doc, flags=..., ignore_permissions=...): ...
def check_permission_and_not_submitted(doc): ...
def check_if_doc_is_linked(doc, method=...):  # -> None:
    """
    Raises excption if the given doc(dt, dn) is linked in another record.
    """
    ...

def check_if_doc_is_dynamically_linked(doc, method=...):  # -> None:
    """Raise `frappe.LinkExistsError` if the document is dynamically linked"""
    ...

def raise_link_exists_exception(doc, reference_doctype, reference_docname, row=...): ...
def delete_dynamic_links(doctype, name): ...
def delete_references(
    doctype,
    reference_doctype,
    reference_name,
    reference_doctype_field=...,
    reference_name_field=...,
): ...
def clear_references(
    doctype,
    reference_doctype,
    reference_name,
    reference_doctype_field=...,
    reference_name_field=...,
): ...
def clear_timeline_references(link_doctype, link_name): ...
def insert_feed(doc): ...
def delete_controllers(doctype, module):  # -> None:
    """
    Delete controller code in the doctype folder
    """
    ...
