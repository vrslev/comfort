"""
This type stub file was generated by pyright.
"""

import frappe
from frappe.model.document import Document

class Tag(Document): ...

def check_user_tags(dt):  # -> None:
    "if the user does not have a tags column, then it creates one"
    ...

@frappe.whitelist()
def add_tag(tag, dt, dn, color=...):
    "adds a new tag to a record, and creates the Tag master"
    ...

@frappe.whitelist()
def add_tags(tags, dt, docs, color=...):  # -> None:
    "adds a new tag to a record, and creates the Tag master"
    ...

@frappe.whitelist()
def remove_tag(tag, dt, dn):  # -> None:
    "removes tag from the record"
    ...

@frappe.whitelist()
def get_tagged_docs(doctype, tag): ...
@frappe.whitelist()
def get_tags(doctype, txt): ...

class DocTags:
    """Tags for a particular doctype"""

    def __init__(self, dt) -> None: ...
    def get_tag_fields(self):
        """returns tag_fields property"""
        ...
    def get_tags(self, dn):  # -> str:
        """returns tag for a particular item"""
        ...
    def add(self, dn, tag):  # -> None:
        """add a new user tag"""
        ...
    def remove(self, dn, tag):  # -> None:
        """remove a user tag"""
        ...
    def remove_all(self, dn):  # -> None:
        """remove all user tags (call before delete)"""
        ...
    def update(self, dn, tl):  # -> None:
        """updates the _user_tag column in the table"""
        ...
    def setup(self):  # -> None:
        """adds the _user_tags column if not exists"""
        ...

def delete_tags_for_document(doc):  # -> None:
    """
    Delete the Tag Link entry of a document that has
    been deleted
    :param doc: Deleted document
    """
    ...

def update_tags(doc, tags):  # -> None:
    """
    Adds tags for documents
    :param doc: Document to be added to global tags
    """
    ...

def get_deleted_tags(new_tags, existing_tags): ...
def delete_tag_for_document(dt, dn, tag): ...
@frappe.whitelist()
def get_documents_for_tag(tag):  # -> list[Unknown]:
    """
    Search for given text in Tag Link
    :param tag: tag to be searched
    """
    ...

@frappe.whitelist()
def get_tags_list_for_awesomebar(): ...
