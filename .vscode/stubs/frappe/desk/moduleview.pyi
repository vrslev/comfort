"""
This type stub file was generated by pyright.
"""

import frappe

@frappe.whitelist()
def get(module):  # -> dict[str, list[Unknown]]:
    """Returns data (sections, list of reports, counts) to render module view in desk:
    `/desk/#Module/[name]`."""
    ...

@frappe.whitelist()
def hide_module(module): ...
def get_table_with_counts(): ...
def get_data(module, build=...):  # -> list[Unknown]:
    """Get module data for the module view `desk/#Module/[name]`"""
    ...

def build_config_from_file(module):  # -> list[Unknown]:
    """Build module info from `app/config/desktop.py` files."""
    ...

def filter_by_restrict_to_domain(data):
    """filter Pages and DocType depending on the Active Module(s)"""
    ...

def build_standard_config(module, doctype_info):  # -> list[Unknown]:
    """Build standard module data from DocTypes."""
    ...

def add_section(data, label, icon, items):  # -> None:
    """Adds a section to the module data."""
    ...

def add_custom_doctypes(data, doctype_info):  # -> None:
    """Adds Custom DocTypes to modules setup via `config/desktop.py`."""
    ...

def get_doctype_info(module):
    """Returns list of non child DocTypes for given module."""
    ...

def combine_common_sections(data):  # -> list[Unknown]:
    """Combine sections declared in separate apps."""
    ...

def apply_permissions(data): ...
def get_disabled_reports(): ...
def get_config(app, module):  # -> list[Unknown]:
    """Load module info from `[app].config.[module]`."""
    ...

def config_exists(app, module): ...
def add_setup_section(config, app, module, label, icon):  # -> None:
    """Add common sections to `/desk#Module/Setup`"""
    ...

def get_setup_section(app, module, label, icon):  # -> dict[str, Unknown] | None:
    """Get the setup section from each module (for global Setup page)."""
    ...

def get_onboard_items(app, module): ...
@frappe.whitelist()
def get_links_for_module(app, module): ...
def get_links(app, module): ...
@frappe.whitelist()
def get_desktop_settings(): ...
@frappe.whitelist()
def update_hidden_modules(category_map): ...
@frappe.whitelist()
def update_global_hidden_modules(modules): ...
@frappe.whitelist()
def update_modules_order(module_category, modules): ...
@frappe.whitelist()
def update_links_for_module(module_name, links): ...
@frappe.whitelist()
def get_options_for_show_hide_cards(): ...
@frappe.whitelist()
def get_options_for_global_modules(): ...
@frappe.whitelist()
def get_options_for_user_blocked_modules(): ...
def set_home_settings(home_settings): ...
@frappe.whitelist()
def get_home_settings(): ...
def get_module_link_items_from_list(app, module, list_of_link_names): ...
def set_last_modified(data): ...
def get_last_modified(doctype): ...
def get_report_list(module, is_standard=...):  # -> list[Unknown]:
    """Returns list on new style reports for modules."""
    ...
