"""
This type stub file was generated by pyright.
"""

from frappe.model.document import Document

class WebsiteGenerator(Document):
    website = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def get_website_properties(self, key=..., default=...): ...
    def autoname(self): ...
    def onload(self): ...
    def validate(self): ...
    def set_route(self): ...
    def make_route(self):  # -> str:
        """Returns the default route. If `route` is specified in DocType it will be
        route/title"""
        ...
    def scrubbed_title(self): ...
    def get_title_field(
        self,
    ):  # -> Any | dict[Unknown, Unknown] | Literal['title', 'name']:
        """return title field from website properties or meta.title_field"""
        ...
    def clear_cache(self): ...
    def scrub(self, text): ...
    def get_parents(self, context):  # -> None:
        """Return breadcrumbs"""
        ...
    def on_update(self): ...
    def on_change(self): ...
    def on_trash(self): ...
    def is_website_published(self):  # -> Any | Dict[str, Any] | bool | list[Unknown]:
        """Return true if published in website"""
        ...
    def get_condition_field(self): ...
    def get_page_info(self): ...
    def send_indexing_request(self, operation_type=...):  # -> None:
        """Send indexing request on update/trash operation."""
        ...
    def allow_website_search_indexing(self): ...
    def remove_old_route_from_index(self):  # -> None:
        """Remove page from the website index if the route has changed."""
        ...
    def update_website_search_index(self):  # -> None:
        """
        Update the full test index executed on document change event.
        - remove document from index if document is unpublished
        - update index otherwise
        """
        ...
