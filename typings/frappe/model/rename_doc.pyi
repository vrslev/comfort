"""
This type stub file was generated by pyright.
"""

import frappe

@frappe.whitelist()
def update_document_title(
    doctype,
    docname,
    title_field=...,
    old_title=...,
    new_title=...,
    new_name=...,
    merge=...,
):  # -> None:
    """
    Update title from header in form view
    """
    ...

def rename_doc(
    doctype,
    old,
    new,
    force=...,
    merge=...,
    ignore_permissions=...,
    ignore_if_exists=...,
    show_alert=...,
):  # -> None:
    """
    Renames a doc(dt, old) to doc(dt, new) and
    updates all linked fields of type "Link"
    """
    ...

def update_assignments(old, new, doctype): ...
def update_user_settings(old, new, link_fields):  # -> None:
    """
    Update the user settings of all the linked doctypes while renaming.
    """
    ...

def update_attachments(doctype, old, new): ...
def rename_versions(doctype, old, new): ...
def rename_parent_and_child(doctype, old, new, meta): ...
def update_autoname_field(doctype, new, meta): ...
def validate_rename(doctype, new, meta, merge, force, ignore_permissions): ...
def rename_doctype(doctype, old, new, force=...): ...
def update_child_docs(old, new, meta): ...
def update_link_field_values(link_fields, old, new, doctype): ...
def get_link_fields(doctype): ...
def update_options_for_fieldtype(fieldtype, old, new): ...
def get_select_fields(old, new):
    """
    get select type fields where doctype's name is hardcoded as
    new line separated list
    """
    ...

def update_select_field_values(old, new): ...
def update_parenttype_values(old, new): ...
def rename_dynamic_links(doctype, old, new): ...
def bulk_rename(doctype, rows=..., via_console=...):  # -> list[Unknown] | None:
    """Bulk rename documents

    :param doctype: DocType to be renamed
    :param rows: list of documents as `((oldname, newname), ..)`"""
    ...

def update_linked_doctypes(doctype, docname, linked_to, value, ignore_doctypes=...): ...
def get_fetch_fields(doctype, linked_to, ignore_doctypes=...): ...
def show_deprecation_warning(funct): ...
