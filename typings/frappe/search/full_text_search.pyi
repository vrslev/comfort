"""
This type stub file was generated by pyright.
"""

class FullTextSearch:
    """Frappe Wrapper for Whoosh"""

    def __init__(self, index_name) -> None: ...
    def get_schema(self): ...
    def get_id(self): ...
    def get_items_to_index(self):  # -> list[Unknown]:
        """Get all documents to be indexed conforming to the schema"""
        ...
    def get_document_to_index(self): ...
    def build(self):  # -> None:
        """Build search index for all documents"""
        ...
    def update_index_by_name(self, doc_name):  # -> None:
        """Wraps `update_index` method, gets the document from name
        and updates the index. This function changes the current user
        and should only be run as administrator or in a background job.

        Args:
                self (object): FullTextSearch Instance
                doc_name (str): name of the document to be updated
        """
        ...
    def remove_document_from_index(self, doc_name):  # -> None:
        """Remove document from search index

        Args:
                self (object): FullTextSearch Instance
                doc_name (str): name of the document to be removed
        """
        ...
    def update_index(self, document):  # -> None:
        """Update search index for a document

        Args:
                self (object): FullTextSearch Instance
                document (_dict): A dictionary with title, path and content
        """
        ...
    def get_index(self): ...
    def create_index(self): ...
    def build_index(self):  # -> None:
        """Build index for all parsed documents"""
        ...
    def search(self, text, scope=..., limit=...):  # -> list[Unknown]:
        """Search from the current index

        Args:
                text (str): String to search for
                scope (str, optional): Scope to limit the search. Defaults to None.
                limit (int, optional): Limit number of search results. Defaults to 20.

        Returns:
                [List(_dict)]: Search results
        """
        ...

def get_index_path(index_name): ...
