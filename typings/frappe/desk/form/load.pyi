"""
This type stub file was generated by pyright.
"""

import frappe

@frappe.whitelist(allow_guest=True)
def getdoc(doctype, name, user=...):  # -> list[Unknown] | None:
    """
    Loads a doclist for a given document. This method is called directly from the client.
    Requries "doctype", "name" as form variables.
    Will also call the "onload" method on the document.
    """
    ...

@frappe.whitelist(allow_guest=True)
def getdoctype(
    doctype, with_parent=..., cached_timestamp=...
):  # -> Literal['use_cache'] | None:
    """load doctype"""
    ...

def get_meta_bundle(doctype): ...
@frappe.whitelist()
def get_docinfo(doc=..., doctype=..., name=...): ...
def get_milestones(doctype, name): ...
def get_attachments(dt, dn): ...
def get_versions(doc): ...
@frappe.whitelist()
def get_communications(doctype, name, start=..., limit=...): ...
def get_comments(doctype, name, comment_type=...): ...
def get_point_logs(doctype, docname): ...
def get_communication_data(
    doctype,
    name,
    start=...,
    limit=...,
    after=...,
    fields=...,
    group_by=...,
    as_dict=...,
):
    """Returns list of communications for a given document"""
    ...

def get_assignments(dt, dn): ...
@frappe.whitelist()
def get_badge_info(doctypes, filters): ...
def run_onload(doc): ...
def get_view_logs(doctype, docname):  # -> list[Unknown]:
    """get and return the latest view logs if available"""
    ...

def get_tags(doctype, name): ...
def get_document_email(doctype, name): ...
def get_automatic_email_link(): ...
def get_additional_timeline_content(doctype, docname): ...
