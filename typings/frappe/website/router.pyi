"""
This type stub file was generated by pyright.
"""

def resolve_route(path):  # -> None:
    """Returns the page route object based on searching in pages and generators.
    The `www` folder is also a part of generator **Web Page**.

    The only exceptions are `/about` and `/contact` these will be searched in Web Pages
    first before checking the standard pages."""
    ...

def get_page_context(path): ...
def make_page_context(path): ...
def get_page_info_from_template(path):  # -> None:
    """Return page_info from path"""
    ...

def get_page_context_from_doctype(path): ...
def clear_sitemap(): ...
def get_all_page_context_from_doctypes():  # -> dict[Unknown, Unknown]:
    """
    Get all doctype generated routes (for sitemap.xml)
    """
    ...

def get_page_info_from_doctypes(path=...):  # -> dict[Unknown, Unknown]:
    """
    Find a document with matching `route` from all doctypes with `has_web_view`=1
    """
    ...

def get_page_info_from_web_page_with_dynamic_routes(path):  # -> None:
    """
    Query Web Page with dynamic_route = 1 and evaluate if any of the routes match
    """
    ...

def evaluate_dynamic_routes(rules, path):  # -> None:
    """
    Use Werkzeug routing to evaluate dynamic routes like /project/<name>
    https://werkzeug.palletsprojects.com/en/1.0.x/routing/
    """
    ...

def get_pages(app=...):
    """Get all pages. Called for docs / sitemap"""
    ...

def get_pages_from_path(start, app, app_path): ...
def get_page_info(path, app, start, basepath=..., app_path=..., fname=...):
    """Load page info"""
    ...

def get_frontmatter(string):  # -> dict[str, Any | str]:
    """
    Reference: https://github.com/jonbeebe/frontmatter
    """
    ...

def setup_source(page_info):  # -> None:
    """Get the HTML source of the template"""
    ...

def get_base_template(path=...):  # -> Any | None:
    """
    Returns the `base_template` for given `path`.
    The default `base_template` for any web route is `templates/web.html` defined in `hooks.py`.
    This can be overridden for certain routes in `custom_app/hooks.py` based on regex pattern.
    """
    ...

def setup_index(page_info):  # -> None:
    """Build page sequence from index.txt"""
    ...

def load_properties_from_source(page_info):  # -> None:
    """Load properties like no_cache, title from source html"""
    ...

def load_properties_from_controller(page_info): ...
def get_doctypes_with_web_view():
    """Return doctypes with Has Web View or set via hooks"""
    ...

def get_start_folders(): ...
